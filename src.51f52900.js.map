{"version":3,"sources":["code.js/task1.js","code.js/task2.js","code.js/task3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","reject","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","promise","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.51f52900.js","sourceRoot":"../src","sourcesContent":["const delay = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = (time) => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n","const users = [\n  { name: \"Mango\", active: true },\n  { name: \"Poly\", active: false },\n  { name: \"Ajax\", active: true },\n  { name: \"Lux\", active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolve, reject) => {\n    resolve(\n      allUsers.map((user) =>\n        user.name === userName ? { ...user, active: !user.active } : user\n      )\n    );\n  });\n};\n\nconst logger = (updatedUsers) => console.table(updatedUsers);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, \"Mango\").then(logger);\ntoggleUserState(users, \"Lux\").then(logger);\n","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve([transaction.id, delay]);\n      }\n      reject(transaction.id);\n    }, delay);\n  });\n  return promise;\n};\n\nconst logSuccess = ([id, time]) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = (id) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import './sass/main.scss';\nimport './code.js/task1';\nimport './code.js/task2';\nimport './code.js/task3';\n"]}